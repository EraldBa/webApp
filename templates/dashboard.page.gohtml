{{template "base" .}}

{{define "css"}}
    <title>DashBoard</title>
    <link rel="stylesheet" href="/static/css/notie.min.css">
    <style>
        body.swal2-shown > [aria-hidden="true"] {
            transition: 0.1s filter;
            filter: blur(10px);
        }
    </style>
{{end}}

{{define "content"}}

    <form class="container-fluid justify-content-start">
        <button class="btn btn-outline-primary" type="button" id="myButton">Select Date</button>
        <button class="btn btn-outline-success" type="button" id="update">Update Stats</button>
    </form>

    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="text-center mt-4">
                    See Your Stats!
                </h1>
                <h2 class="text-center mt-2" id="current_date"></h2>
                <h3 class="text-center">Today's Total: </h3>
                <h3 class="text-center" id="today_total"></h3>
            </div>
        </div>

        <div class="row">
            <div class="col">
                <div style="width: 400px;">
                    <canvas id="calories"></canvas>
                </div>
            </div>
            <div class="col">
                <div style="width: 500px;">
                    <canvas id="macros"></canvas>
                </div>
            </div>
        </div>

    </div>
{{end}}

{{define "js"}}
    <script src="/static/js/notie.min.js"></script>
    <script src="/static/js/chart.js"></script>
    <script src="/static/js/sweetalert2@11.js"></script>
    <script>
        function ParseFloatPrecise(str) {
          return Number(parseFloat(str).toFixed(2));
        }

        let current_date = new Date();
        let dd = String(current_date.getDate()).padStart(2, '0');
        let mm = String(current_date.getMonth() + 1).padStart(2, '0');
        let yyyy = current_date.getFullYear();
        current_date = yyyy+"-"+mm+"-"+dd;
        document.getElementById('current_date').innerHTML = current_date;


        let stat_cache = new Map([
            [current_date, {
                {{with .Stats}}
                    breakfast: ParseFloatPrecise({{.Breakfast}}),
                    lunch: ParseFloatPrecise({{.Lunch}}),
                    dinner: ParseFloatPrecise({{.Dinner}}),
                    snacks: ParseFloatPrecise({{.Snacks}}),
                    protein: ParseFloatPrecise({{.Protein}}),
                    carbs: ParseFloatPrecise({{.Carbs}}),
                    fats: ParseFloatPrecise({{.Fats}}),
                {{end}}
            }]
        ]);

        let total_cal = stat_cache.get(current_date).breakfast +
                        stat_cache.get(current_date).lunch +
                        stat_cache.get(current_date).dinner +
                        stat_cache.get(current_date).snacks;
        document.getElementById('today_total').innerHTML = total_cal.toString();

        const csrf_token = "{{.CSRFToken}}";
        const ctx = document.getElementById('calories');
        const ctz = document.getElementById('macros');

        function update_stats(desired_stats){

            calChart.data.datasets[0].data[0] = desired_stats.breakfast;
            calChart.data.datasets[0].data[1] = desired_stats.lunch;
            calChart.data.datasets[0].data[2] = desired_stats.dinner;
            calChart.data.datasets[0].data[3] = desired_stats.snacks;

            total_cal = desired_stats.breakfast +
                        desired_stats.lunch +
                        desired_stats.dinner +
                        desired_stats.snacks;

            macroChart.data.datasets[0].data[0] = desired_stats.protein;
            macroChart.data.datasets[0].data[1] = desired_stats.carbs;
            macroChart.data.datasets[0].data[2] = desired_stats.fats;

            document.getElementById('today_total').innerHTML = total_cal.toString();

            macroChart.update();
            calChart.update();
        }


        function real_time_update(result){
            let given_cals = ParseFloatPrecise(result[2]);
            let given_protein = ParseFloatPrecise(result[3]);
            let given_carbs = ParseFloatPrecise(result[4]);
            let given_fats = ParseFloatPrecise(result[5]);
            let given_date = result[0];

            if (stat_cache.has(given_date)){
                let stats = stat_cache.get(given_date);
                stats[result[1]] += given_cals;
                stats.protein += given_protein;
                stats.carbs += given_carbs;
                stats.fats += given_fats;
            }

            if (current_date === given_date) {
                update_stats(stat_cache.get(current_date));
            }
        }

        document.getElementById("update").addEventListener("click", function(){
            let html = `
            <form id="stats-update" action="/dashboard" method="post" style="width: 450px; display: inline-block;">
                  <div class="form-row">
                    <div class="col">
                      <div class="form-group mt-4">
                        <label for="desired_date" class="form-label">Enter Date</label>
                        <input required type="date" class="form-control"  id="desired_date" name="desired_date" aria-describedby="dateHelp">
                        <div id="dateHelp" class="form-text">Enter date</div>
                      </div>
                    <div>
                    <div class="col">
                      <select class="form-select" id="time_of_day" name="time_of_day">
                        <option selected value="">Choose Time Of Day</option>
                        <option value="breakfast">Breakfast</option>
                        <option value="lunch">Lunch</option>
                        <option value="dinner">Dinner</option>
                        <option value="snacks">Snacks</option>
                      </select>
                    </div>
                <div class="row">
                <div class="col">
                  <div class="form-group">
                    <label for="calories" class="form-label">Enter Calories</label>
                    <input value = "0" type="number" class="form-control" id="calorie" name="calorie">
                  </div>
                </div>
                <div class="col">
                  <div class="form-group">
                    <label for="protein" class="form-label">Enter Protein</label>
                    <input value = "0" type="number" class="form-control" id="protein" name="protein">
                  </div>
                </div>
                </div>
                <div class="row">
                <div class="col">
                <div class="form-group">
                    <label for="carbs" class="form-label">Enter Carbs</label>
                    <input value = "0" type="number" class="form-control" id="carbs" name="carbs">
                 </div>
                </div>
                <div class="col">
                <div class="form-group">
                    <label for="fats" class="form-label">Enter Fat</label>
                    <input value = "0" type="number" class="form-control" id="fats" name="fats">
                </div>
                </div>
                </div>
                <hr>
                </div>
                </form>
            `
            attention.custom({
                msg:html,
                title:"Enter Values",
                callback: function (result){
                    real_time_update(result)

                    let form = document.getElementById("stats-update")
                    let formData = new FormData(form);
                    formData.append("csrf_token", csrf_token);

                    fetch ("/dashboard",
                        {
                            method: "post",
                            body: formData,
                        });
                }
            })
        })

        document.getElementById("myButton").addEventListener("click", function(){
            displayCalendar()
        })

        let calChart = new Chart(ctx, {
            type: 'doughnut',
            data:{
                labels: [
                    'Breakfast',
                    'Lunch',
                    'Dinner',
                    'Snacks'
                ],
                datasets: [{
                    label: 'Calories',
                    data: [stat_cache.get(current_date).breakfast,
                        stat_cache.get(current_date).lunch,
                        stat_cache.get(current_date).dinner,
                        stat_cache.get(current_date).snacks],
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)',
                        'rgb(0, 255, 0)'
                    ],
                    hoverOffset: 4,
                }]
            }
        });
        let macroChart = new Chart(ctz, {
            type: 'bar',
            data:{
                labels: [
                    'Protein',
                    'Carbs',
                    'Fat',
                ],
                datasets: [{
                    label: 'Macros',
                    data: [stat_cache.get(current_date).protein,
                        stat_cache.get(current_date).carbs,
                        stat_cache.get(current_date).fats],
                    backgroundColor: [
                        'rgb(0, 255, 0)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 99, 132)',
                    ],
                    hoverOffset: 4,

                }],

            },
            options:{
                indexAxis: 'y',
            }
        });

        function displayCalendar(){
            let myDate = new Date()
            notie.date({
                value: myDate,
                submitCallback: async function (date) {
                    let dd = String(date.getDate()).padStart(2, '0');
                    let mm = String(date.getMonth() + 1).padStart(2, '0');
                    let yyyy = date.getFullYear();
                    current_date = yyyy+"-"+mm+"-"+dd;
                    document.getElementById('current_date').innerHTML = current_date;
                    if (stat_cache.has(current_date)){
                        update_stats(stat_cache.get(current_date));
                    }else{
                        let dateJSON = {
                            "date": current_date,
                            "csrf_token": csrf_token,
                        }
                        await fetch ("/dashboard-new",{
                            method: "post",
                            body: JSON.stringify(dateJSON),
                        })
                            .then(response => response.json())
                            .then(data => stat_cache.set(current_date, {
                                breakfast: data.breakfast,
                                lunch: data.lunch,
                                dinner: data.dinner,
                                snacks: data.snacks,
                                protein: data.protein,
                                carbs: data.carbs,
                                fats: data.fats,
                            }));
                        console.log(stat_cache.get(current_date));
                        update_stats(stat_cache.get(current_date));
                    }

                    notie.alert({ type: 1, text: 'You selected: ' + current_date });
                }
            })
        }


    </script>
{{end}}